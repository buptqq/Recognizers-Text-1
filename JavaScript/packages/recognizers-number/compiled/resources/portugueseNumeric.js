"use strict";
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
const baseNumbers_1 = require("./baseNumbers");
var PortugueseNumeric;
(function (PortugueseNumeric) {
    PortugueseNumeric.LangMarker = 'Por';
    PortugueseNumeric.HundredsNumberIntegerRegex = `(quatrocent[ao]s|trezent[ao]s|seiscent[ao]s|setecent[ao]s|oitocent[ao]s|novecent[ao]s|duzent[ao]s|quinhent[ao]s|cem|(?<!por\\s+)(cento))`;
    PortugueseNumeric.RoundNumberIntegerRegex = `(mil|milh[ãa]o|milh[õo]es|bilh[ãa]o|bilh[õo]es|trilh[ãa]o|trilh[õo]es|qua[td]rilh[ãa]o|qua[td]rilh[õo]es|quintilh[ãa]o|quintilh[õo]es)`;
    PortugueseNumeric.ZeroToNineIntegerRegex = `(quatro|cinco|sete|nove|zero|tr[êe]s|seis|oito|dois|duas|um|uma)`;
    PortugueseNumeric.TenToNineteenIntegerRegex = `(dez[ea]sseis|dez[ea]ssete|dez[ea]nove|dezoito|quatorze|catorze|quinze|treze|d[ée]z|onze|doze)`;
    PortugueseNumeric.TensNumberIntegerRegex = `(cinquenta|quarenta|trinta|sessenta|setenta|oitenta|noventa|vinte)`;
    PortugueseNumeric.DigitsNumberRegex = `\\d|\\d{1,3}(\\.\\d{3})`;
    PortugueseNumeric.BelowHundredsRegex = `((${PortugueseNumeric.TenToNineteenIntegerRegex}|(${PortugueseNumeric.TensNumberIntegerRegex}(\\s+e\\s+${PortugueseNumeric.ZeroToNineIntegerRegex})?))|${PortugueseNumeric.ZeroToNineIntegerRegex})`;
    PortugueseNumeric.BelowThousandsRegex = `(${PortugueseNumeric.HundredsNumberIntegerRegex}(\\s+e\\s+${PortugueseNumeric.BelowHundredsRegex})?|${PortugueseNumeric.BelowHundredsRegex})`;
    PortugueseNumeric.SupportThousandsRegex = `((${PortugueseNumeric.BelowThousandsRegex}|${PortugueseNumeric.BelowHundredsRegex})\\s+${PortugueseNumeric.RoundNumberIntegerRegex}(\\s+${PortugueseNumeric.RoundNumberIntegerRegex})?)`;
    PortugueseNumeric.SeparaIntRegex = `(${PortugueseNumeric.SupportThousandsRegex}(\\s+${PortugueseNumeric.SupportThousandsRegex})*(\\s+${PortugueseNumeric.BelowThousandsRegex})?|${PortugueseNumeric.BelowThousandsRegex})`;
    PortugueseNumeric.AllIntRegex = `(${PortugueseNumeric.SeparaIntRegex}|mil(\\s+${PortugueseNumeric.BelowThousandsRegex})?)`;
    PortugueseNumeric.AllPointRegex = `((\\s+${PortugueseNumeric.ZeroToNineIntegerRegex})+|(\\s+${PortugueseNumeric.AllIntRegex}))`;
    PortugueseNumeric.SpecialFractionInteger = `(((${PortugueseNumeric.AllIntRegex})i?(${PortugueseNumeric.ZeroToNineIntegerRegex})|(${PortugueseNumeric.AllIntRegex}))\\s+a?v[oa]s?)`;
    PortugueseNumeric.PlaceHolderDefault = `\\D|\\b`;
    PortugueseNumeric.PlaceHolderPureNumber = `\\b`;
    PortugueseNumeric.AllIntRegexWithLocks = `((?<=\\b)${PortugueseNumeric.AllIntRegex}(?=\\b))`;
    PortugueseNumeric.AllIntRegexWithDozenSuffixLocks = `(?<=\\b)(((meia)?\\s+(d[úu]zia))|(${PortugueseNumeric.AllIntRegex}\\s+(e|com)\\s+)?(${PortugueseNumeric.AllIntRegex}\\s+(d[úu]zia(s)?|dezena(s)?)))(?=\\b)`;
    PortugueseNumeric.NumbersWithPlaceHolder = (placeholder) => { return `(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+(?!(,\\d+[a-zA-Z]))(?=${placeholder})`; };
    PortugueseNumeric.NumbersWithSuffix = `(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s*(k|M|T|G)(?=\\b)`;
    PortugueseNumeric.RoundNumberIntegerRegexWithLocks = `(?<=\\b)(${PortugueseNumeric.DigitsNumberRegex})+\\s+${PortugueseNumeric.RoundNumberIntegerRegex}(?=\\b)`;
    PortugueseNumeric.NumbersWithDozenSuffix = `(((?<!\\d+\\s*)-\\s*)|(?<=\\b))\\d+\\s+dezena(s)?(?=\\b)`;
    PortugueseNumeric.NumbersWithDozen2Suffix = `(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+(\\s+d[úu]zia(s))?(?=\\b)`;
    PortugueseNumeric.SimpleRoundOrdinalRegex = `(mil[eé]sim[oa]|milion[eé]sim[oa]|bilion[eé]sim[oa]|trilion[eé]sim[oa]|quatrilion[eé]sim[oa]|quintilion[eé]sim[oa])`;
    PortugueseNumeric.OneToNineOrdinalRegex = `(primeir[oa]|segund[oa]|terceir[oa]|quart[oa]|quint[oa]|sext[oa]|s[eé]tim[oa]|oitav[oa]|non[oa])`;
    PortugueseNumeric.TensOrdinalRegex = `(nonag[eé]sim[oa]|octog[eé]sim[oa]|setuag[eé]sim[oa]|septuag[eé]sim[oa]|sexag[eé]sim[oa]|quinquag[eé]sim[oa]|quadrag[eé]sim[oa]|trig[eé]sim[oa]|vig[eé]sim[oa]|d[eé]cim[oa])`;
    PortugueseNumeric.HundredOrdinalRegex = `(cent[eé]sim[oa]|ducent[eé]sim[oa]|tricent[eé]sim[oa]|cuadringent[eé]sim[oa]|quingent[eé]sim[oa]|sexcent[eé]sim[oa]|septingent[eé]sim[oa]|octingent[eé]sim[oa]|noningent[eé]sim[oa])`;
    PortugueseNumeric.SpecialUnderHundredOrdinalRegex = `(und[eé]cim[oa]|duod[eé]cimo)`;
    PortugueseNumeric.UnderHundredOrdinalRegex = `(((${PortugueseNumeric.TensOrdinalRegex}(\\s)?)?${PortugueseNumeric.OneToNineOrdinalRegex})|${PortugueseNumeric.TensOrdinalRegex}|${PortugueseNumeric.SpecialUnderHundredOrdinalRegex})`;
    PortugueseNumeric.UnderThousandOrdinalRegex = `(((${PortugueseNumeric.HundredOrdinalRegex}(\\s)?)?${PortugueseNumeric.UnderHundredOrdinalRegex})|${PortugueseNumeric.HundredOrdinalRegex})`;
    PortugueseNumeric.OverThousandOrdinalRegex = `((${PortugueseNumeric.AllIntRegex})([eé]sim[oa]))`;
    PortugueseNumeric.ComplexOrdinalRegex = `((${PortugueseNumeric.OverThousandOrdinalRegex}(\\s)?)?${PortugueseNumeric.UnderThousandOrdinalRegex}|${PortugueseNumeric.OverThousandOrdinalRegex})`;
    PortugueseNumeric.SuffixRoundOrdinalRegex = `((${PortugueseNumeric.AllIntRegex})(${PortugueseNumeric.SimpleRoundOrdinalRegex}))`;
    PortugueseNumeric.ComplexRoundOrdinalRegex = `(((${PortugueseNumeric.SuffixRoundOrdinalRegex}(\\s)?)?${PortugueseNumeric.ComplexOrdinalRegex})|${PortugueseNumeric.SuffixRoundOrdinalRegex})`;
    PortugueseNumeric.AllOrdinalRegex = `${PortugueseNumeric.ComplexOrdinalRegex}|${PortugueseNumeric.SimpleRoundOrdinalRegex}|${PortugueseNumeric.ComplexRoundOrdinalRegex}`;
    PortugueseNumeric.OrdinalSuffixRegex = `(?<=\\b)(\\d*(1[oa]|2[oa]|3[oa]|4[oa]|5[oa]|6[oa]|7[oa]|8[oa]|9[oa]|0[oa]))(?=\\b)`;
    PortugueseNumeric.OrdinalEnglishRegex = `(?<=\\b)${PortugueseNumeric.AllOrdinalRegex}(?=\\b)`;
    PortugueseNumeric.FractionNotationRegex = `(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+[/]\\d+(?=(\\b[^/]|$))`;
    PortugueseNumeric.FractionNotationWithSpacesRegex = `(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s+\\d+[/]\\d+(?=(\\b[^/]|$))`;
    PortugueseNumeric.FractionNounRegex = `(?<=\\b)(${PortugueseNumeric.AllIntRegex}\\s+((e|com)\\s+)?)?(${PortugueseNumeric.AllIntRegex})(\\s+((e|com)\\s)?)(((${PortugueseNumeric.AllOrdinalRegex})s?|(${PortugueseNumeric.SpecialFractionInteger})|(${PortugueseNumeric.SuffixRoundOrdinalRegex})s?)|mei[oa]?|ter[çc]o?)(?=\\b)`;
    PortugueseNumeric.FractionNounWithArticleRegex = `(?<=\\b)(${PortugueseNumeric.AllIntRegex}\\s+(e\\s+)?)?(um|um[as])(\\s+)((${PortugueseNumeric.AllOrdinalRegex})|(${PortugueseNumeric.SuffixRoundOrdinalRegex})|(e\\s+)?mei[oa]?)(?=\\b)`;
    PortugueseNumeric.FractionPrepositionRegex = `(?<=\\b)((${PortugueseNumeric.AllIntRegex})|((?<!\\.)\\d+))\\s+sobre\\s+((${PortugueseNumeric.AllIntRegex})|((\\d+)(?!\\.)))(?=\\b)`;
    PortugueseNumeric.AllFloatRegex = `${PortugueseNumeric.AllIntRegex}(\\s+(vírgula|virgula|e|ponto))${PortugueseNumeric.AllPointRegex}`;
    PortugueseNumeric.DoubleWithMultiplierRegex = `(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+\\,)))\\d+,\\d+\\s*(K|k|M|G|T)(?=\\b)`;
    PortugueseNumeric.DoubleExponentialNotationRegex = `(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+,)))(\\d+(,\\d+)?)e([+-]*[1-9]\\d*)(?=\\b)`;
    PortugueseNumeric.DoubleCaretExponentialNotationRegex = `(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+,)))(\\d+(,\\d+)?)\\^([+-]*[1-9]\\d*)(?=\\b)`;
    PortugueseNumeric.DoubleDecimalPointRegex = (placeholder) => { return `(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+,)))\\d+,\\d+(?!(,\\d+))(?=${placeholder})`; };
    PortugueseNumeric.DoubleWithoutIntegralRegex = (placeholder) => { return `(?<=\\s|^)(?<!(\\d+)),\\d+(?!(,\\d+))(?=${placeholder})`; };
    PortugueseNumeric.DoubleWithRoundNumber = `(((?<!\\d+\\s*)-\\s*)|((?<=\\b)(?<!\\d+\\,)))\\d+,\\d+\\s+${PortugueseNumeric.RoundNumberIntegerRegex}(?=\\b)`;
    PortugueseNumeric.DoubleAllFloatRegex = `((?<=\\b)${PortugueseNumeric.AllFloatRegex}(?=\\b))`;
    PortugueseNumeric.CurrencyRegex = `(((?<=\\W|^)-\\s*)|(?<=\\b))\\d+\\s*(B|b|m|t|g)(?=\\b)`;
    PortugueseNumeric.NumberWithSuffixPercentage = `(${baseNumbers_1.BaseNumbers.NumberReplaceToken})(\\s*)(%|por cento|pontos percentuais)`;
    PortugueseNumeric.DecimalSeparatorChar = ',';
    PortugueseNumeric.FractionMarkerToken = 'sobre';
    PortugueseNumeric.NonDecimalSeparatorChar = '.';
    PortugueseNumeric.HalfADozenText = 'seis';
    PortugueseNumeric.WordSeparatorToken = 'e';
    PortugueseNumeric.WrittenDecimalSeparatorTexts = ['virgula', 'vírgula'];
    PortugueseNumeric.WrittenGroupSeparatorTexts = ['ponto'];
    PortugueseNumeric.WrittenIntegerSeparatorTexts = ['e'];
    PortugueseNumeric.WrittenFractionSeparatorTexts = ['com'];
    PortugueseNumeric.WrittenFractionSuffix = ['avo', 'ava'];
    PortugueseNumeric.PluralSuffix = 's';
    PortugueseNumeric.HalfADozenRegex = `meia\\s+d[uú]zia`;
    PortugueseNumeric.DigitalNumberRegex = `((?<=\\b)(mil|cem|milh[oõ]es|milh[aã]o|bilh[oõ]es|bilh[aã]o|trilh[oõ]es|trilh[aã]o|milhares|centena|centenas|dezena|dezenas?)(?=\\b))|((?<=(\\d|\\b))(k|t|m|g)(?=\\b))`;
    PortugueseNumeric.SignMap = new Map([["negative", -1], ["minus", -1]]);
    PortugueseNumeric.CardinalNumberMap = new Map([["zero", 0], ["hum", 1], ["um", 1], ["uma", 1], ["dois", 2], ["duas", 2], ["meia", 2], ["meio", 2], ["tres", 3], ["três", 3], ["quatro", 4], ["cinco", 5], ["seis", 6], ["sete", 7], ["oito", 8], ["nove", 9], ["dez", 10], ["dezena", 10], ["déz", 10], ["onze", 11], ["doze", 12], ["dúzia", 12], ["duzia", 12], ["dúzias", 12], ["duzias", 12], ["treze", 13], ["catorze", 14], ["quatorze", 14], ["quinze", 15], ["dezesseis", 16], ["dezasseis", 16], ["dezessete", 17], ["dezassete", 17], ["dezoito", 18], ["dezenove", 19], ["dezanove", 19], ["vinte", 20], ["trinta", 30], ["quarenta", 40], ["cinquenta", 50], ["cincoenta", 50], ["sessenta", 60], ["setenta", 70], ["oitenta", 80], ["noventa", 90], ["cem", 100], ["cento", 100], ["duzentos", 200], ["duzentas", 200], ["trezentos", 300], ["trezentas", 300], ["quatrocentos", 400], ["quatrocentas", 400], ["quinhentos", 500], ["quinhentas", 500], ["seiscentos", 600], ["seiscentas", 600], ["setecentos", 700], ["setecentas", 700], ["oitocentos", 800], ["oitocentas", 800], ["novecentos", 900], ["novecentas", 900], ["mil", 1000], ["milhão", 1000000], ["milhao", 1000000], ["milhões", 1000000], ["milhoes", 1000000], ["bilhão", 1000000000], ["bilhao", 1000000000], ["bilhões", 1000000000], ["bilhoes", 1000000000], ["trilhão", 1000000000000], ["trilhao", 1000000000000], ["trilhões", 1000000000000], ["trilhoes", 1000000000000]]);
    PortugueseNumeric.OrdinalNumberMap = new Map([["primeiro", 1], ["primeira", 1], ["segundo", 2], ["segunda", 2], ["terceiro", 3], ["terceira", 3], ["quarto", 4], ["quarta", 4], ["quinto", 5], ["quinta", 5], ["sexto", 6], ["sexta", 6], ["sétimo", 7], ["setimo", 7], ["sétima", 7], ["setima", 7], ["oitavo", 8], ["oitava", 8], ["nono", 9], ["nona", 9], ["décimo", 10], ["decimo", 10], ["décima", 10], ["decima", 10], ["undécimo", 11], ["undecimo", 11], ["undécima", 11], ["undecima", 11], ["duodécimo", 11], ["duodecimo", 11], ["duodécima", 11], ["duodecima", 11], ["vigésimo", 20], ["vigesimo", 20], ["vigésima", 20], ["vigesima", 20], ["trigésimo", 30], ["trigesimo", 30], ["trigésima", 30], ["trigesima", 30], ["quadragésimo", 40], ["quadragesimo", 40], ["quadragésima", 40], ["quadragesima", 40], ["quinquagésimo", 50], ["quinquagesimo", 50], ["quinquagésima", 50], ["quinquagesima", 50], ["sexagésimo", 60], ["sexagesimo", 60], ["sexagésima", 60], ["sexagesima", 60], ["septuagésimo", 70], ["septuagesimo", 70], ["septuagésima", 70], ["septuagesima", 70], ["setuagésimo", 70], ["setuagesimo", 70], ["setuagésima", 70], ["setuagesima", 70], ["octogésimo", 80], ["octogesimo", 80], ["octogésima", 80], ["octogesima", 80], ["nonagésimo", 90], ["nonagesimo", 90], ["nonagésima", 90], ["nonagesima", 90], ["centesimo", 100], ["centésimo", 100], ["centesima", 100], ["centésima", 100], ["ducentésimo", 200], ["ducentesimo", 200], ["ducentésima", 200], ["ducentesima", 200], ["tricentésimo", 300], ["tricentesimo", 300], ["tricentésima", 300], ["tricentesima", 300], ["trecentésimo", 300], ["trecentesimo", 300], ["trecentésima", 300], ["trecentesima", 300], ["quadringentésimo", 400], ["quadringentesimo", 400], ["quadringentésima", 400], ["quadringentesima", 400], ["quingentésimo", 500], ["quingentesimo", 500], ["quingentésima", 500], ["quingentesima", 500], ["sexcentésimo", 600], ["sexcentesimo", 600], ["sexcentésima", 600], ["sexcentesima", 600], ["seiscentésimo", 600], ["seiscentesimo", 600], ["seiscentésima", 600], ["seiscentesima", 600], ["septingentésimo", 700], ["septingentesimo", 700], ["septingentésima", 700], ["septingentesima", 700], ["setingentésimo", 700], ["setingentesimo", 700], ["setingentésima", 700], ["setingentesima", 700], ["octingentésimo", 800], ["octingentesimo", 800], ["octingentésima", 800], ["octingentesima", 800], ["noningentésimo", 900], ["noningentesimo", 900], ["noningentésima", 900], ["noningentesima", 900], ["nongentésimo", 900], ["nongentesimo", 900], ["nongentésima", 900], ["nongentesima", 900], ["milésimo", 1000], ["milesimo", 1000], ["milésima", 1000], ["milesima", 1000], ["milionésimo", 1000000], ["milionesimo", 1000000], ["milionésima", 1000000], ["milionesima", 1000000], ["bilionésimo", 1000000000], ["bilionesimo", 1000000000], ["bilionésima", 1000000000], ["bilionesima", 1000000000]]);
    PortugueseNumeric.PrefixCardinalMap = new Map([["hum", 1], ["dois", 2], ["tres", 3], ["três", 3], ["quatro", 4], ["cinco", 5], ["seis", 6], ["sete", 7], ["oito", 8], ["nove", 9], ["dez", 10], ["onze", 11], ["doze", 12], ["treze", 13], ["catorze", 14], ["quatorze", 14], ["quinze", 15], ["dezesseis", 16], ["dezasseis", 16], ["dezessete", 17], ["dezassete", 17], ["dezoito", 18], ["dezenove", 19], ["dezanove", 19], ["vinte", 20], ["trinta", 30], ["quarenta", 40], ["cinquenta", 50], ["cincoenta", 50], ["sessenta", 60], ["setenta", 70], ["oitenta", 80], ["noventa", 90], ["cem", 100], ["duzentos", 200], ["trezentos", 300], ["quatrocentos", 400], ["quinhentos", 500], ["seiscentos", 600], ["setecentos", 700], ["oitocentos", 800], ["novecentos", 900]]);
    PortugueseNumeric.SuffixOrdinalMap = new Map([["milesimo", 1000], ["milionesimo", 1000000], ["bilionesimo", 1000000000], ["trilionesimo", 1000000000000]]);
    PortugueseNumeric.RoundNumberMap = new Map([["mil", 1000], ["milesimo", 1000], ["milhão", 1000000], ["milhao", 1000000], ["milhões", 1000000], ["milhoes", 1000000], ["milionésimo", 1000000], ["milionesimo", 1000000], ["bilhão", 1000000000], ["bilhao", 1000000000], ["bilhões", 1000000000], ["bilhoes", 1000000000], ["bilionésimo", 1000000000], ["bilionesimo", 1000000000], ["trilhão", 1000000000000], ["trilhao", 1000000000000], ["trilhões", 1000000000000], ["trilhoes", 1000000000000], ["trilionésimo", 1000000000000], ["trilionesimo", 1000000000000], ["dezena", 10], ["dezenas", 10], ["dúzia", 12], ["duzia", 12], ["dúzias", 12], ["duzias", 12], ["k", 1000], ["m", 1000000], ["g", 1000000000], ["t", 1000000000000]]);
})(PortugueseNumeric = exports.PortugueseNumeric || (exports.PortugueseNumeric = {}));
//# sourceMappingURL=portugueseNumeric.js.map