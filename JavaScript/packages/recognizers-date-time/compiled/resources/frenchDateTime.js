"use strict";
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
const baseDateTime_1 = require("./baseDateTime");
var FrenchDateTime;
(function (FrenchDateTime) {
    FrenchDateTime.TillRegex = `(?<till>au|[aà]|et|jusqu'[aà]|avant|--|-|—|——)`;
    FrenchDateTime.RangeConnectorRegex = `(?<and>et|de la|au|[aà]|et\\s*la|--|-|—|——)`;
    FrenchDateTime.RelativeRegex = `(?<order>prochain|prochaine|de|du|ce|cette|l[ae]|derni[eè]re|pr[eé]c[eé]dente|au\\s+cours+(de|du\\s*))`;
    FrenchDateTime.NextSuffixRegex = `(?<order>prochain|prochaine|prochaines|suivante)\\b`;
    FrenchDateTime.PastSuffixRegex = `(?<order>dernier|derni[eè]re|pr[eé]c[eé]dente)\\b`;
    FrenchDateTime.ThisPrefixRegex = `(?<order>ce|cette|au\\s+cours+(du|de))\\b`;
    FrenchDateTime.DayRegex = `(?<day>01|02|03|04|05|06|07|08|09|10|11|11e|12|12e|13|13e|14|14e|15|15e|16|16e|17|17e|18|18e|19|19e|1er|1|21|21e|20|20e|22|22e|23|23e|24|24e|25|25e|26|26e|27|27e|28|28e|29|29e|2|2e|30|30e|31|31e|3|3e|4|4e|5|5e|6|6e|7|7e|8|8e|9|9e)(?=\\b|t)`;
    FrenchDateTime.MonthNumRegex = `(?<month>01|02|03|04|05|06|07|08|09|10|11|12|1|2|3|4|5|6|7|8|9)\\b`;
    FrenchDateTime.PeriodYearRegex = `\\b(?<year>19\\d{2}|20\\d{2})\\b`;
    FrenchDateTime.WeekDayRegex = `(?<weekday>Dimanche|Lundi|Mardi|Mecredi|Jeudi|Vendredi|Samedi|Lun|Mar|Mer|Jeu|Ven|Sam|Dim)\\b`;
    FrenchDateTime.RelativeMonthRegex = `(?<relmonth>(${FrenchDateTime.ThisPrefixRegex}\\s+mois)|(mois\\s+${FrenchDateTime.PastSuffixRegex})|(mois\\s+${FrenchDateTime.NextSuffixRegex}))\\b`;
    FrenchDateTime.EngMonthRegex = `(?<month>Avril|Avr\\.|Avr|Août|D[eé]cembre|D[eé]c|D[eé]c\\.|F[eé]vrier|F[eé]v|F[eé]vr\\.|F[eé]vr|Javier|Jan|Janv\\.|Janv|Juillet|Jul|Juil|Juil\\.|Juin|Jun|Mars|Mar|Mai|Novembre|Nov|Nov\\.|Octobre|Oct|Oct\\.|Septembre|Sep|Sept|Sept\\.)`;
    FrenchDateTime.MonthSuffixRegex = `(?<msuf>(en\\s*|le\\s*|de\\s*|dans\\s*)?(${FrenchDateTime.RelativeMonthRegex}|${FrenchDateTime.EngMonthRegex}))`;
    FrenchDateTime.DateUnitRegex = `(?<unit>l'ann[eé]e|ann[eé]es|an|mois|semaines|semaine|jours|jour|journ[eé]e|journ[eé]es)\\b`;
    FrenchDateTime.SimpleCasesRegex = `\\b((d[ue])|entre\\s+)?(${FrenchDateTime.DayRegex})\\s*${FrenchDateTime.TillRegex}\\s*(${FrenchDateTime.DayRegex})\\s+${FrenchDateTime.MonthSuffixRegex}((\\s+|\\s*,\\s*)${FrenchDateTime.PeriodYearRegex})?\\b`;
    FrenchDateTime.MonthFrontSimpleCasesRegex = `\\b((d[ue]|entre)\\s+)?${FrenchDateTime.MonthSuffixRegex}\\s+((d[ue]|entre)\\s+)?(${FrenchDateTime.DayRegex})\\s*${FrenchDateTime.TillRegex}\\s*(${FrenchDateTime.DayRegex})((\\s+|\\s*,\\s*)${FrenchDateTime.PeriodYearRegex})?\\b`;
    FrenchDateTime.MonthFrontBetweenRegex = `\\b${FrenchDateTime.MonthSuffixRegex}\\s+(entre|d[ue]\\s+)(${FrenchDateTime.DayRegex})\\s*${FrenchDateTime.RangeConnectorRegex}\\s*(${FrenchDateTime.DayRegex})((\\s+|\\s*,\\s*)${FrenchDateTime.PeriodYearRegex})?\\b`;
    FrenchDateTime.BetweenRegex = `\\b(entre\\s+)(${FrenchDateTime.DayRegex})\\s*${FrenchDateTime.RangeConnectorRegex}\\s*(${FrenchDateTime.DayRegex})\\s+${FrenchDateTime.MonthSuffixRegex}((\\s+|\\s*,\\s*)${FrenchDateTime.PeriodYearRegex})?\\b`;
    FrenchDateTime.YearWordRegex = `\\b(?<year>l'ann[ée]e)\\b`;
    FrenchDateTime.MonthWithYear = `\\b((?<month>Avril|Avr\\.|Avr|Août|Aout|Decembre|D[eé]c|Dec\\.|F[eé]v|F[eé]vr|Fev|F[eé]vrier|F[eé]v\\.|Janvier|Jan|Janv|Janv\\.|Jan\\.|Jul|Juillet|Juil\\.|Jun|Juin|Mar|Mars|Mai|Novembre|Nov|Nov\\.|Octobre|Oct|Oct\\.|Septembre|Sep|Sept|Sept\\.),?(\\s+de)?\\s+(${FrenchDateTime.PeriodYearRegex}|(?<order>cette)\\s*${FrenchDateTime.YearWordRegex})|${FrenchDateTime.YearWordRegex}\\s*(${FrenchDateTime.PastSuffixRegex}|${FrenchDateTime.NextSuffixRegex}))`;
    FrenchDateTime.OneWordPeriodRegex = `\\b((${FrenchDateTime.RelativeRegex}\\s+)?(?<month>Avril|Avr\\.|Avr|Août|Aout|D[eé]cembre|Dec|D[eé]c\\.|F[eé]vrier|Fev|F[eé]v\\.|F[eé]vr|Janvier|Janv\\.|Janv|Jan|Jan\\.|Jul|Juillet|Juil\\.|Jun|Juin|Mar|Mars|Mai|Nov|Novembre|Nov\\.|Oct|Octobre|Oct\\.|Sep|Septembre|Sept\\.)|${FrenchDateTime.RelativeRegex}\\s+(weekend|fin de semaine|week-end|semaine|mois|ans|l'année)|weekend|week-end|(mois|l'année))\\b`;
    FrenchDateTime.MonthNumWithYear = `(${FrenchDateTime.PeriodYearRegex}[/\\-\\.]${FrenchDateTime.MonthNumRegex})|(${FrenchDateTime.MonthNumRegex}[/\\-]${FrenchDateTime.PeriodYearRegex})`;
    FrenchDateTime.WeekOfMonthRegex = `(?<wom>(le\\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4|cinqi[èe]me|5)\\s+semaine\\s+${FrenchDateTime.MonthSuffixRegex})`;
    FrenchDateTime.WeekOfYearRegex = `(?<woy>(le\\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4|cinqi[èe]me|5)\\s+semaine(\\s+de)?\\s+(${FrenchDateTime.PeriodYearRegex}|${FrenchDateTime.RelativeRegex}\\s+ann[ée]e))`;
    FrenchDateTime.FollowedDateUnit = `^\\s*${FrenchDateTime.DateUnitRegex}`;
    FrenchDateTime.NumberCombinedWithDateUnit = `\\b(?<num>\\d+(\\.\\d*)?)${FrenchDateTime.DateUnitRegex}`;
    FrenchDateTime.QuarterRegex = `(le\\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4)\\s+quart(\\s+de|\\s*,\\s*)?\\s+(${FrenchDateTime.PeriodYearRegex}|${FrenchDateTime.RelativeRegex}\\s+l'ann[eé]e)`;
    FrenchDateTime.QuarterRegexYearFront = `(${FrenchDateTime.PeriodYearRegex}|l'année\\s+(${FrenchDateTime.PastSuffixRegex}|${FrenchDateTime.NextSuffixRegex})|${FrenchDateTime.RelativeRegex}\\s+ann[eé]e)\\s+(le\\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4)\\s+quarts`;
    FrenchDateTime.SeasonRegex = `\\b((<seas>printemps|été|automne|hiver)+\\s*(${FrenchDateTime.NextSuffixRegex}|${FrenchDateTime.PastSuffixRegex}))|(?<season>(${FrenchDateTime.RelativeRegex}\\s+)?(?<seas>printemps|[ée]t[ée]|automne|hiver)((\\s+de|\\s*,\\s*)?\\s+(${FrenchDateTime.PeriodYearRegex}|${FrenchDateTime.RelativeRegex}\\s+l'ann[eé]e))?)\\b`;
    FrenchDateTime.WhichWeekRegex = `(semaine)(\\s*)(?<number>\\d\\d|\\d|0\\d)`;
    FrenchDateTime.WeekOfRegex = `(semaine)(\\s*)(de)`;
    FrenchDateTime.MonthOfRegex = `(mois)(\\s*)(de)`;
    FrenchDateTime.MonthRegex = `(?<month>Avril|Avr|Avr\\.|Août|Aout|Decembre|D[eé]c|Dec\\.|F[eé]vrier|F[eé]vr|Fev|F[eé]v|F[eé]v\\.|Janvier|Janv\\.|Janv|Jan|Jan\\.|Juillet|Juil|Juil\\.|Juin|Mars|Mai|Novembre|Nov|Nov\\.|Octobre|Oct|Oct\\.|Septembre|Sep|Sept|Sept\\.)`;
    FrenchDateTime.DateYearRegex = `(?<year>19\\d{2}|20\\d{2}|((9\\d|0\\d|1\\d|2\\d)(?!\\s*\\:)))`;
    FrenchDateTime.OnRegex = `(?<=\\b(en|sur\\s*l[ea]|sur)\\s+)(${FrenchDateTime.DayRegex}s?)\\b`;
    FrenchDateTime.RelaxedOnRegex = `(?<=\\b(en|le|dans|sur\\s*l[ea]|du|sur)\\s+)((?<day>10e|11e|12e|13e|14e|15e|16e|17e|18e|19e|1er|20e|21e|22e|23e|24e|25e|26e|27e|28e|29e|2e|30e|31e|3e|4e|5e|6e|7e|8e|9e)s?)\\b`;
    FrenchDateTime.ThisRegex = `\\b((cette(\\s*semaine)?\\s+)${FrenchDateTime.WeekDayRegex})|(${FrenchDateTime.WeekDayRegex}(\\s+cette\\s*semaine))\\b`;
    FrenchDateTime.LastDateRegex = `\\b((${FrenchDateTime.WeekDayRegex}(\\s*(de)?\\s*la\\s*semaine\\s+${FrenchDateTime.PastSuffixRegex}))|(${FrenchDateTime.WeekDayRegex}(\\s+${FrenchDateTime.PastSuffixRegex})))\\b`;
    FrenchDateTime.NextDateRegex = `\\b((${FrenchDateTime.WeekDayRegex}(\\s+${FrenchDateTime.NextSuffixRegex}))|(${FrenchDateTime.WeekDayRegex}(\\s*(de)?\\s*la\\s*semaine\\s+${FrenchDateTime.NextSuffixRegex})))\\b`;
    FrenchDateTime.SpecialDayRegex = `\\b(avant[\\s|-]hier|apr[eè]s(-demain|\\s*demain)|(le\\s)?jour suivant|(le\\s+)?dernier jour|hier|lendemain|demain|de la journ[ée]e|aujourd'hui)\\b`;
    FrenchDateTime.StrictWeekDay = `\\b(?<weekday>Dimanche|Lundi|Mardi|Mecredi|Jeudi|Vendredi|Samedi|Lun|Mar|Mer|Jeu|Ven|Sam|Dim)s?\\b`;
    FrenchDateTime.SetWeekDayRegex = `\\b(?<prefix>le\\s+)?(?<weekday>matin|matin[ée]e|apres-midi|soir[ée]e|soir|Dimanche|Lundi|Mardi|Mercredi|Jeudi|Vendredi|Samedi)s\\b`;
    FrenchDateTime.WeekDayOfMonthRegex = `(?<wom>(le\\s+)?(?<cardinal>premier|1er|duexi[èe]me|2|troisi[èe]me|3|quatri[èe]me|4|cinqi[èe]me|5)\\s+${FrenchDateTime.WeekDayRegex}\\s+${FrenchDateTime.MonthSuffixRegex})`;
    FrenchDateTime.NumberEndingPattern = `^[.]`;
    FrenchDateTime.SpecialDate = `(?<=\\b([àa]|au|le)\\s+)${FrenchDateTime.DayRegex}\\b`;
    FrenchDateTime.DateExtractor1 = `\\b(${FrenchDateTime.WeekDayRegex}(\\s+|\\s*,\\s*))?${FrenchDateTime.MonthRegex}\\s*[/\\\\\\.\\-]?\\s*${FrenchDateTime.DayRegex}\\b`;
    FrenchDateTime.DateExtractor2 = `\\b(${FrenchDateTime.WeekDayRegex}(\\s+|\\s*,\\s*))?${FrenchDateTime.DayRegex}(\\s+|\\s*,\\s*|\\s+)${FrenchDateTime.MonthRegex}\\s*[\\.\\-]?\\s*${FrenchDateTime.DateYearRegex}\\b`;
    FrenchDateTime.DateExtractor3 = `\\b(${FrenchDateTime.WeekDayRegex}(\\s+|\\s*,\\s*))?${FrenchDateTime.DayRegex}(\\s+|\\s*,\\s*|\\s*-\\s*)${FrenchDateTime.MonthRegex}((\\s+|\\s*,\\s*)${FrenchDateTime.DateYearRegex})?\\b`;
    FrenchDateTime.DateExtractor4 = `\\b${FrenchDateTime.MonthNumRegex}\\s*[/\\\\\\-]\\s*${FrenchDateTime.DayRegex}\\s*[/\\\\\\-]\\s*${FrenchDateTime.DateYearRegex}`;
    FrenchDateTime.DateExtractor5 = `\\b${FrenchDateTime.DayRegex}\\s*[/\\\\\\-]\\s*${FrenchDateTime.MonthNumRegex}\\s*[/\\\\\\-]\\s*${FrenchDateTime.DateYearRegex}`;
    FrenchDateTime.DateExtractor6 = `(?<=\\b(le|sur|sur l[ae])\\s+)${FrenchDateTime.MonthNumRegex}[\\-\\.\\/]${FrenchDateTime.DayRegex}\\b`;
    FrenchDateTime.DateExtractor7 = `\\b${FrenchDateTime.DayRegex}\\s*/\\s*${FrenchDateTime.MonthNumRegex}((\\s+|\\s*,\\s*)${FrenchDateTime.DateYearRegex})?\\b`;
    FrenchDateTime.DateExtractor8 = `(?<=\\b(le)\\s+)${FrenchDateTime.DayRegex}[\\\\\\-]${FrenchDateTime.MonthNumRegex}\\b`;
    FrenchDateTime.DateExtractor9 = `\\b${FrenchDateTime.DayRegex}\\s*/\\s*${FrenchDateTime.MonthNumRegex}((\\s+|\\s*,\\s*)${FrenchDateTime.DateYearRegex})?\\b`;
    FrenchDateTime.DateExtractorA = `\\b${FrenchDateTime.DateYearRegex}\\s*[/\\\\\\-]\\s*${FrenchDateTime.MonthNumRegex}\\s*[/\\\\\\-]\\s*${FrenchDateTime.DayRegex}`;
    FrenchDateTime.OfMonth = `^\\s*de\\s*${FrenchDateTime.MonthRegex}`;
    FrenchDateTime.MonthEnd = `${FrenchDateTime.MonthRegex}\\s*(le)?\\s*$`;
    FrenchDateTime.RangeUnitRegex = `\\b(?<unit>l'année|ann[eé]e(s)?|mois|semaines|semaine)\\b`;
    FrenchDateTime.DescRegex = `(?<desc>h|ampm|am\\b|a\\.m\\.|a m\\b|a\\. m\\.|a\\.m\\b|a\\. m\\b|pm\\b|p\\.m\\.|p m\\b|p\\. m\\.|p\\.m\\b|p\\. m\\b|p\\b\\b)`;
    FrenchDateTime.HourNumRegex = `\\b(?<hournum>zero|un|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize|quatorze|quinze|dix-six|dix-sept|dix-huit|dix-neuf|vingt|vingt-et-un|vingt-deux|vingt-trois)\\b`;
    FrenchDateTime.MinuteNumRegex = `(?<minnum>un|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize|quatorze|quinze|seize|dix-sept|dix-huit|dix-neuf|vingt|trente|quarante|cinquante)`;
    FrenchDateTime.DeltaMinuteNumRegex = `(?<deltaminnum>un|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize|quatorze|quinze|seize|dix-sept|dix-huit|dix-neuf|vingt|trente|quarante|cinquante)`;
    FrenchDateTime.OclockRegex = `(?<oclock>heure|heures|h)`;
    FrenchDateTime.PmRegex = `(?<pm>(dans l'\\s*)?apr[eè]s(\\s*|-)midi|(du|ce|de|le)\\s*(soir[ée]e|soir)|(dans l[ea]\\s+)?(nuit|soir[eé]e))`;
    FrenchDateTime.AmRegex = `(?<am>(du|de|ce|(du|de|dans)\\s*l[ea]|le)?\\s*matin[ée]e|(du|de|ce|dans l[ea]|le)?\\s*matin)`;
    FrenchDateTime.LessThanOneHour = `(?<lth>(une\\s+)?quart|trois quart(s)?|demie( heure)?|${baseDateTime_1.BaseDateTime.DeltaMinuteRegex}(\\s+(minute|minutes|min|mins))|${FrenchDateTime.DeltaMinuteNumRegex}(\\s+(minute|minutes|min|mins)))`;
    FrenchDateTime.EngTimeRegex = `(?<engtime>${FrenchDateTime.HourNumRegex}\\s+(${FrenchDateTime.MinuteNumRegex}|(?<tens>vingt|trente|quarante|cinquante)\\s+${FrenchDateTime.MinuteNumRegex}))`;
    FrenchDateTime.TimePrefix = `(?<prefix>(heures\\s*et\\s+${FrenchDateTime.LessThanOneHour}|et ${FrenchDateTime.LessThanOneHour}|${FrenchDateTime.LessThanOneHour} [àa]))`;
    FrenchDateTime.TimeSuffix = `(?<suffix>${FrenchDateTime.AmRegex}|${FrenchDateTime.PmRegex}|${FrenchDateTime.OclockRegex})`;
    FrenchDateTime.BasicTime = `(?<basictime>${FrenchDateTime.EngTimeRegex}|${FrenchDateTime.HourNumRegex}|${baseDateTime_1.BaseDateTime.HourRegex}:${baseDateTime_1.BaseDateTime.MinuteRegex}(:${baseDateTime_1.BaseDateTime.SecondRegex})?|${baseDateTime_1.BaseDateTime.HourRegex})`;
    FrenchDateTime.MidnightRegex = `(?<midnight>minuit)`;
    FrenchDateTime.MorningRegex = `(?<morning>matin[ée]e|matin)`;
    FrenchDateTime.AfternoonRegex = `(?<afternoon>(d'|l')?apr[eè]s(-|\\s*)midi)`;
    FrenchDateTime.MidmorningRegex = `(?<midmorning>milieu\\s*d[ue]\\s*${FrenchDateTime.MorningRegex})`;
    FrenchDateTime.MiddayRegex = `(?<midday>milieu(\\s*|-)d[eu]\\s*(jour|midi)|apr[eè]s(-|\\s*)midi)`;
    FrenchDateTime.MidafternoonRegex = `(?<midafternoon>milieu\\s*d'+${FrenchDateTime.AfternoonRegex})`;
    FrenchDateTime.MidTimeRegex = `(?<mid>(${FrenchDateTime.MidnightRegex}|${FrenchDateTime.MidmorningRegex}|${FrenchDateTime.MidafternoonRegex}|${FrenchDateTime.MiddayRegex}))`;
    FrenchDateTime.AtRegex = `\\b(((?<=\\b[àa]\\s+)(${FrenchDateTime.EngTimeRegex}|${FrenchDateTime.HourNumRegex}|${baseDateTime_1.BaseDateTime.HourRegex}|${FrenchDateTime.MidTimeRegex}))|${FrenchDateTime.MidTimeRegex})\\b`;
    FrenchDateTime.IshRegex = `\\b(peu\\s*pr[èe]s\\s*${baseDateTime_1.BaseDateTime.HourRegex}|peu\\s*pr[èe]s\\s*${FrenchDateTime.EngTimeRegex}|peu\\s*pr[èe]s\\s*[àa]\\s*${baseDateTime_1.BaseDateTime.HourRegex}|peu pr[èe]s midi)\\b`;
    FrenchDateTime.TimeUnitRegex = `(?<unit>heures|heure|hrs|hr|h|minutes|minute|mins|min|secondes|seconde|secs|sec)\\b`;
    FrenchDateTime.RestrictedTimeUnitRegex = `(?<unit>huere|minute)\\b`;
    FrenchDateTime.ConnectNumRegex = `${baseDateTime_1.BaseDateTime.HourRegex}(?<min>00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59)\\s*${FrenchDateTime.DescRegex}`;
    FrenchDateTime.FivesRegex = `(?<tens>(quinze|vingt(\\s*|-*(cinq))?|trente(\\s*|-*(cinq))?|quarante(\\s*|-*(cinq))??|cinquante(\\s*|-*(cinq))?|dix|cinq))\\b`;
    FrenchDateTime.PeriodHourNumRegex = `(?<hour>vingt-et-un|vingt-deux|vingt-trois|vingt-quatre|zero|une|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize|quatorze|quinze|seize|dix-sept|dix-huit|dix-neuf|vingt)`;
    FrenchDateTime.TimeRegex1 = `\\b(${FrenchDateTime.EngTimeRegex}|${FrenchDateTime.HourNumRegex}|${baseDateTime_1.BaseDateTime.HourRegex})\\s*${FrenchDateTime.DescRegex}(\\s+${FrenchDateTime.TimePrefix})?`;
    FrenchDateTime.TimeRegex2 = `(\\b${FrenchDateTime.TimePrefix}\\s+)?(T)?${baseDateTime_1.BaseDateTime.HourRegex}(\\s*)?:(\\s*)?${baseDateTime_1.BaseDateTime.MinuteRegex}((\\s*)?:(\\s*)?${baseDateTime_1.BaseDateTime.SecondRegex})?((\\s*${FrenchDateTime.DescRegex})|\\b)`;
    FrenchDateTime.TimeRegex3 = `\\b${baseDateTime_1.BaseDateTime.HourRegex}\\.${baseDateTime_1.BaseDateTime.MinuteRegex}(\\s*${FrenchDateTime.DescRegex})(\\s+${FrenchDateTime.TimePrefix})?`;
    FrenchDateTime.TimeRegex4 = `\\b${FrenchDateTime.BasicTime}(\\s*${FrenchDateTime.DescRegex})?(\\s+${FrenchDateTime.TimePrefix})?\\s+${FrenchDateTime.TimeSuffix}\\b`;
    FrenchDateTime.TimeRegex5 = `\\b${FrenchDateTime.BasicTime}((\\s*${FrenchDateTime.DescRegex})|\\b)(\\s+${FrenchDateTime.TimePrefix})?`;
    FrenchDateTime.TimeRegex6 = `${FrenchDateTime.BasicTime}(\\s*${FrenchDateTime.DescRegex})?\\s+${FrenchDateTime.TimeSuffix}\\b`;
    FrenchDateTime.TimeRegex7 = `\\b${FrenchDateTime.TimeSuffix}\\s+[àa]\\s+${FrenchDateTime.BasicTime}((\\s*${FrenchDateTime.DescRegex})|\\b)`;
    FrenchDateTime.TimeRegex8 = `\\b${FrenchDateTime.TimeSuffix}\\s+${FrenchDateTime.BasicTime}((\\s*${FrenchDateTime.DescRegex})|\\b)`;
    FrenchDateTime.TimeRegex9 = `\\b${FrenchDateTime.PeriodHourNumRegex}\\s+${FrenchDateTime.FivesRegex}((\\s*${FrenchDateTime.DescRegex})|\\b)`;
    FrenchDateTime.HourRegex = `(?<hour>00|01|02|03|04|05|06|07|08|09|0|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|1|2|3|4|5|6|7|8|9)`;
    FrenchDateTime.PeriodDescRegex = `(?<desc>pm|am|p\\.m\\.|a\\.m\\.|p)`;
    FrenchDateTime.PeriodPmRegex = `(?<pm>dans l'apr[eè]s-midi|ce soir|d[eu] soir|dans l[ea] soir[eé]e|dans la nuit|d[eu] soir[ée]e)s?`;
    FrenchDateTime.PeriodAmRegex = `(?<am>matin|d[eu] matin|matin[ée]e)s?`;
    FrenchDateTime.PureNumFromTo = `((du|de|des|depuis)\\s+)?(${FrenchDateTime.HourRegex}|${FrenchDateTime.PeriodHourNumRegex})(\\s*(?<leftDesc>${FrenchDateTime.PeriodDescRegex}))?\\s*${FrenchDateTime.TillRegex}\\s*(${FrenchDateTime.HourRegex}|${FrenchDateTime.PeriodHourNumRegex})\\s*(?<rightDesc>${FrenchDateTime.PmRegex}|${FrenchDateTime.AmRegex}|${FrenchDateTime.PeriodDescRegex})?`;
    FrenchDateTime.PureNumBetweenAnd = `(entre\\s+)(${FrenchDateTime.HourRegex}|${FrenchDateTime.PeriodHourNumRegex})(\\s*(?<leftDesc>${FrenchDateTime.PeriodDescRegex}))?\\s*${FrenchDateTime.RangeConnectorRegex}\\s*(${FrenchDateTime.HourRegex}|${FrenchDateTime.PeriodHourNumRegex})\\s*(?<rightDesc>${FrenchDateTime.PmRegex}|${FrenchDateTime.AmRegex}|${FrenchDateTime.PeriodDescRegex})?`;
    FrenchDateTime.PrepositionRegex = `(?<prep>^([aà] la|en|sur\\s*l[ea]|sur|de)$)`;
    FrenchDateTime.TimeOfDayRegex = `\\b(?<timeOfDay>((((dans\\s+(l[ea])?\\s+)?((?<early>d[eé]but(\\s+|-)|t[oô]t(\\s+|-)(l[ea]\\s*)?)|(?<late>fin\\s*|fin de(\\s+(la)?)|tard\\s*))?(matin[ée]e|matin|((d|l)?'?)apr[eè]s[-|\\s*]midi|nuit|soir[eé]e|soir)))|(((\\s+(l[ea])?\\s+)?)(jour|journ[eé]e)))s?)\\b`;
    FrenchDateTime.SpecificTimeOfDayRegex = `\\b((${FrenchDateTime.RelativeRegex}\\s+${FrenchDateTime.TimeOfDayRegex})|(${FrenchDateTime.TimeOfDayRegex}\\s*(${FrenchDateTime.NextSuffixRegex}))\\b|\\bsoir|\\bdu soir)s?\\b`;
    FrenchDateTime.TimeFollowedUnit = `^\\s*${FrenchDateTime.TimeUnitRegex}`;
    FrenchDateTime.TimeNumberCombinedWithUnit = `\\b(?<num>\\d+(\\.\\d*)?)${FrenchDateTime.TimeUnitRegex}`;
    FrenchDateTime.NowRegex = `\\b(?<now>(ce\\s+)?moment|maintenant|d[eè]s que possible|dqp|r[eé]cemment|auparavant)\\b`;
    FrenchDateTime.SuffixRegex = `^\\s*(dans\\s+l[ea]\\s+)|(en\\s+)|(du)?(matin|matin([eé]e)?|apr[eè]s-midi|soir[eé]e|nuit)\\b`;
    FrenchDateTime.DateTimeTimeOfDayRegex = `\\b(?<timeOfDay>matin[ée]e|matin|apr[eè]s-midi|nuit|soir)\\b`;
    FrenchDateTime.DateTimeSpecificTimeOfDayRegex = `\\b((${FrenchDateTime.RelativeRegex}\\s+${FrenchDateTime.DateTimeTimeOfDayRegex})\\b|\\b(ce|cette\\s+)(soir|nuit))\\b`;
    FrenchDateTime.TimeOfTodayAfterRegex = `^\\s*(,\\s*)?(en|dans|du\\s+)?${FrenchDateTime.DateTimeSpecificTimeOfDayRegex}`;
    FrenchDateTime.TimeOfTodayBeforeRegex = `${FrenchDateTime.DateTimeSpecificTimeOfDayRegex}(\\s*,)?(\\s+([àa]|pour))?\\s*$`;
    FrenchDateTime.SimpleTimeOfTodayAfterRegex = `(${FrenchDateTime.HourNumRegex}|${baseDateTime_1.BaseDateTime.HourRegex})\\s*(,\\s*)?(en|[àa]\\s+)?${FrenchDateTime.DateTimeSpecificTimeOfDayRegex}`;
    FrenchDateTime.SimpleTimeOfTodayBeforeRegex = `${FrenchDateTime.DateTimeSpecificTimeOfDayRegex}(\\s*,)?(\\s+([àa]|vers))?\\s*(${FrenchDateTime.HourNumRegex}|${baseDateTime_1.BaseDateTime.HourRegex})`;
    FrenchDateTime.TheEndOfRegex = `(la\\s+)?fin(\\s+de\\s*|\\s*de*l[ea])?\\s*$`;
    FrenchDateTime.PeriodTimeOfDayRegex = `\\b((dans\\s+(le)?\\s+)?((?<early>d[eé]but(\\s+|-|d[ue]|de la)|t[oô]t)|(?<late>tard\\s*|fin(\\s+|-|d[eu])?))?(?<timeOfDay>matin|((d|l)?'?)apr[eè]s-midi|nuit|soir[eé]e|soir))\\b`;
    FrenchDateTime.PeriodSpecificTimeOfDayRegex = `\\b((${FrenchDateTime.RelativeRegex}\\s+${FrenchDateTime.PeriodTimeOfDayRegex})\\b|\\b(ce|cette\\s+)(soir|nuit))\\b`;
    FrenchDateTime.PeriodTimeOfDayWithDateRegex = `\\b((${FrenchDateTime.TimeOfDayRegex}))\\b`;
    FrenchDateTime.DurationUnitRegex = `(?<unit>ans|ann[eé]e|mois|semaines|semaine|jour|jours|heures|heure|hrs|hr|h|minutes|minute|mins|min|secondes|seconde|secs|sec|ann[eé]es|journ[eé]e)\\b`;
    FrenchDateTime.SuffixAndRegex = `(?<suffix>\\s*(et)\\s+((un|une)\\s+)?(?<suffix_num>demi|quart))`;
    FrenchDateTime.PeriodicRegex = `\\b(?<periodic>quotidienne|quotidien|journellement|mensuel|mensuelle|jour|jours|hebdomadaire|bihebdomadaire|annuellement|annuel)\\b`;
    FrenchDateTime.EachUnitRegex = `(?<each>(chaque|toutes les|tous les)(?<other>\\s+autres)?\\s*${FrenchDateTime.DurationUnitRegex})`;
    FrenchDateTime.EachPrefixRegex = `\\b(?<each>(chaque|tous les|(toutes les))\\s*$)`;
    FrenchDateTime.SetEachRegex = `\\b(?<each>(chaque|tous les|(toutes les))\\s*)`;
    FrenchDateTime.SetLastRegex = `(?<last>prochain|dernier|derni[eè]re|pass[ée]s|pr[eé]c[eé]dent|courant|en\\s*cours)`;
    FrenchDateTime.EachDayRegex = `^\\s*(chaque|tous les)\\s*(jour|jours)\\b`;
    FrenchDateTime.DurationFollowedUnit = `^\\s*${FrenchDateTime.SuffixAndRegex}?(\\s+|-)?${FrenchDateTime.DurationUnitRegex}`;
    FrenchDateTime.NumberCombinedWithDurationUnit = `\\b(?<num>\\d+(\\.\\d*)?)(-)?${FrenchDateTime.DurationUnitRegex}`;
    FrenchDateTime.AnUnitRegex = `\\b(((?<half>demi\\s+)?(-)\\s+${FrenchDateTime.DurationUnitRegex}))`;
    FrenchDateTime.AllRegex = `\\b(?<all>toute\\s(l['ea])\\s?(?<unit>ann[eé]e|mois|semaine|semaines|jour|jours|journ[eé]e))\\b`;
    FrenchDateTime.HalfRegex = `(((un|une)\\s*)|\\b)(?<half>demi?(\\s*|-)+(?<unit>ann[eé]e|ans|mois|semaine|jour|heure))\\b`;
    FrenchDateTime.ConjunctionRegex = `\\b((et(\\s+de|pour)?)|avec)\\b`;
    FrenchDateTime.YearRegex = `\\b(?<year>19\\d{2}|20\\d{2})\\b`;
    FrenchDateTime.HolidayRegex1 = `\\b(?<holiday>vendredi saint|mercredi des cendres|p[aâ]ques|l'action de gr[âa]ce|mardi gras|la saint-sylvestre|la saint sylvestre|la Saint-Valentin|la saint valentin|nouvel an chinois|nouvel an|r[eé]veillon de Nouvel an|jour de l'an|premier-mai|ler-mai|1-mai|poisson d'avril|r[eé]veillon de No[eë]l|veille de no[eë]l|noël|noel|thanksgiving|halloween|yuandan)(\\s+((d[ue]\\s+|d'))?(${FrenchDateTime.YearRegex}|(${FrenchDateTime.ThisPrefixRegex}\\s+)ann[eé]e|ann[eé]e\\s+(${FrenchDateTime.PastSuffixRegex}|${FrenchDateTime.NextSuffixRegex})))?\\b`;
    FrenchDateTime.HolidayRegex2 = `\\b(?<holiday>martin luther king|martin luther king jr|toussaint|st patrick|st george|cinco de mayo|l'ind[eé]pendance|guy fawkes)(\\s+(de\\s+)?(${FrenchDateTime.YearRegex}|${FrenchDateTime.ThisPrefixRegex}\\s+ann[eé]e|ann[eé]e\\s+(${FrenchDateTime.PastSuffixRegex}|${FrenchDateTime.NextSuffixRegex})))?\\b`;
    FrenchDateTime.HolidayRegex3 = `(?<holiday>(jour\\s*(d[eu]|des)\\s*(canberra|p[aâ]ques|colomb|bastille|la prise de la bastille|l'ind[eé]pendance|l'ind[eé]pendance am[eé]ricaine|thanks\\s*giving|bapt[êe]me|nationale|d'armistice|inaugueration|marmotte|assomption|femme|comm[ée]moratif)))(\\s+(de\\s+)?(${FrenchDateTime.YearRegex}|${FrenchDateTime.ThisPrefixRegex}\\s+ann[eé]e|ann[eé]e\\s+(${FrenchDateTime.PastSuffixRegex}|${FrenchDateTime.NextSuffixRegex})))?`;
    FrenchDateTime.HolidayRegex4 = `(?<holiday>(F[eê]te\\s*(d[eu]|des)\\s*)(travail|m[eè]re|m[eè]res|p[eè]re|p[eè]res))(\\s+(de\\s+)?(${FrenchDateTime.YearRegex}|${FrenchDateTime.ThisPrefixRegex}\\s+ann[eé]e|ann[eé]e\\s+(${FrenchDateTime.PastSuffixRegex}|${FrenchDateTime.NextSuffixRegex})))?\\b`;
    FrenchDateTime.DateTokenPrefix = 'le ';
    FrenchDateTime.TimeTokenPrefix = 'à ';
    FrenchDateTime.TokenBeforeDate = 'le ';
    FrenchDateTime.TokenBeforeTime = 'à ';
    FrenchDateTime.AMTimeRegex = `(?<am>matin[ée]e|matin)`;
    FrenchDateTime.PMTimeRegex = `\\b(?<pm>(d'|l')?apr[eè]s-midi|soir|nuit|\\s*ce soir|du soir)\\b`;
    FrenchDateTime.BeforeRegex = `\\b(avant)\\b`;
    FrenchDateTime.BeforeRegex2 = `\\b(entre\\s*(le|la(s)?)?)\\b`;
    FrenchDateTime.AfterRegex = `\\b(apres)\\b`;
    FrenchDateTime.SinceRegex = `\\b(depuis)\\b`;
    FrenchDateTime.AgoPrefixRegex = `\\b(y a)\\b`;
    FrenchDateTime.LaterRegex = `\\b(plus tard)\\b`;
    FrenchDateTime.InConnectorRegex = `\\b(dans|en|sur)\\b`;
    FrenchDateTime.AmDescRegex = `(h|am\\b|a\\.m\\.|a m\\b|a\\. m\\.|a\\.m\\b|a\\. m\\b)`;
    FrenchDateTime.PmDescRegex = `(h|pm\\b|p\\.m\\.|p\\b|p m\\b|p\\. m\\.|p\\.m\\b|p\\. m\\b)`;
    FrenchDateTime.AmPmDescRegex = `(h|ampm)`;
    FrenchDateTime.MorningStartEndRegex = `(^(matin))|((matin)$)`;
    FrenchDateTime.AfternoonStartEndRegex = `(^((d'|l')?apr[eè]s-midi))|(((d'|l')?apr[eè]s-midi)$)`;
    FrenchDateTime.EveningStartEndRegex = `(^(soir[ée]e|soir))|((soir[ée]e|soir)$)`;
    FrenchDateTime.NightStartEndRegex = `(^(nuit))|((nuit)$)`;
    FrenchDateTime.InExactNumberRegex = `\\b(quelque|quel qu[ée]s|quelqu[ée]s|plusieur|plusieurs|divers)\\b`;
    FrenchDateTime.InExactNumberUnitRegex = `(${FrenchDateTime.InExactNumberRegex})\\s+(${FrenchDateTime.DurationUnitRegex})`;
    FrenchDateTime.RelativeTimeUnitRegex = `((((${FrenchDateTime.ThisPrefixRegex})?)\\s+(${FrenchDateTime.TimeUnitRegex}(\\s*${FrenchDateTime.NextSuffixRegex}|${FrenchDateTime.PastSuffixRegex})?))|((le))\\s+(${FrenchDateTime.RestrictedTimeUnitRegex}))`;
    FrenchDateTime.RelativeDurationUnitRegex = `(((?<=(${FrenchDateTime.ThisPrefixRegex})\\s+)?\\b(${FrenchDateTime.DurationUnitRegex})(\\s+${FrenchDateTime.NextSuffixRegex}|${FrenchDateTime.PastSuffixRegex})?)|((le|my))\\s+(${FrenchDateTime.RestrictedTimeUnitRegex}))`;
    FrenchDateTime.ConnectorRegex = `^(,|pour|t|vers)$`;
    FrenchDateTime.ConnectorAndRegex = `\\b(et\\s*(le|la(s)?)?)\\b.+`;
    FrenchDateTime.FromRegex = `((de|du)?)$`;
    FrenchDateTime.FromRegex2 = `((depuis|de)(\\s*la(s)?)?)$`;
    FrenchDateTime.FromToRegex = `\\b(du|de|des|depuis).+(à|a|au)\\b.+`;
    FrenchDateTime.SingleAmbiguousMonthRegex = `^(le\\s+)?(may|march)$`;
    FrenchDateTime.PrepositionSuffixRegex = `\\b(du|de|[àa]|vers|dans)$`;
    FrenchDateTime.FlexibleDayRegex = `(?<DayOfMonth>([A-Za-z]+\\s)?[A-Za-z\\d]+)`;
    FrenchDateTime.ForTheRegex = `\\b(((pour le ${FrenchDateTime.FlexibleDayRegex})|(dans (le\\s+)?${FrenchDateTime.FlexibleDayRegex}(?<=(st|nd|rd|th))))(?<end>\\s*(,|\\.|!|\\?|$)))`;
    FrenchDateTime.WeekDayAndDayOfMothRegex = `\\b${FrenchDateTime.WeekDayRegex}\\s+(le\\s+${FrenchDateTime.FlexibleDayRegex})\\b`;
    FrenchDateTime.RestOfDateRegex = `\\b(Reste|fin)\\s+(d[eu]\\s+)?((le|cette|ce)\\s+)?(?<duration>semaine|mois|l'ann[ée]e)\\b`;
    FrenchDateTime.RestOfDateTimeRegex = `\\b(Reste|fin)\\s+(d[eu]\\s+)?((le|cette|ce)\\s+)?(?<unit>jour)\\b`;
    FrenchDateTime.LaterEarlyPeriodRegex = `^[.]`;
    FrenchDateTime.WeekWithWeekDayRangeRegex = `^[.]`;
    FrenchDateTime.GeneralEndingRegex = `^[.]`;
    FrenchDateTime.MiddlePauseRegex = `^[.]`;
    FrenchDateTime.DurationConnectorRegex = `^[.]`;
    FrenchDateTime.PrefixArticleRegex = `^[\\.]`;
    FrenchDateTime.UnitMap = new Map([["annees", "Y"], ["annee", "Y"], ["ans", "Y"], ["mois", "MON"], ["semaines", "W"], ["semaine", "W"], ["journees", "D"], ["journee", "D"], ["jour", "D"], ["jours", "D"], ["heures", "H"], ["heure", "H"], ["hrs", "H"], ["hr", "H"], ["h", "H"], ["minutes", "M"], ["minute", "M"], ["mins", "M"], ["min", "M"], ["secondes", "S"], ["seconde", "S"], ["secs", "S"], ["sec", "S"]]);
    FrenchDateTime.UnitValueMap = new Map([["annees", 31536000], ["annee", 31536000], ["l'annees", 31536000], ["l'annee", 31536000], ["ans", 31536000], ["mois", 2592000], ["semaines", 604800], ["semaine", 604800], ["journees", 86400], ["journee", 86400], ["jour", 86400], ["jours", 86400], ["heures", 3600], ["heure", 3600], ["hrs", 3600], ["hr", 3600], ["h", 3600], ["minutes", 60], ["minute", 60], ["mins", 60], ["min", 60], ["secondes", 1], ["seconde", 1], ["secs", 1], ["sec", 1]]);
    FrenchDateTime.SeasonMap = new Map([["printemps", "SP"], ["été", "SU"], ["automne", "FA"], ["hiver", "WI"]]);
    FrenchDateTime.SeasonValueMap = new Map([["SP", 3], ["SU", 6], ["FA", 9], ["WI", 12]]);
    FrenchDateTime.CardinalMap = new Map([["premier", 1], ["1er", 1], ["deuxième", 2], ["2e", 2], ["troisième", 3], ["troisieme", 3], ["3e", 3], ["quatrième", 4], ["4e", 4], ["cinqième", 5], ["5e", 5]]);
    FrenchDateTime.DayOfWeek = new Map([["lundi", 1], ["mardi", 2], ["mecredi", 3], ["jeudi", 4], ["vendredi", 5], ["samedi", 6], ["dimanche", 0], ["lun", 1], ["mar", 2], ["mer", 3], ["jeu", 4], ["ven", 5], ["sam", 6], ["dim", 0]]);
    FrenchDateTime.MonthOfYear = new Map([["1", 1], ["2", 2], ["3", 3], ["4", 4], ["5", 5], ["6", 6], ["7", 7], ["8", 8], ["9", 9], ["10", 10], ["11", 11], ["12", 12], ["janvier", 1], ["fevrier", 2], ["mars", 3], ["mar", 3], ["avril", 4], ["avr", 4], ["mai", 5], ["juin", 6], ["jun", 6], ["juillet", 7], ["aout", 8], ["septembre", 9], ["octobre", 10], ["novembre", 11], ["decembre", 12], ["janv", 1], ["janv.", 1], ["jan", 1], ["fevr", 2], ["fevr.", 2], ["févr.", 2], ["févr", 2], ["fev", 2], ["juil", 7], ["jul", 7], ["sep", 9], ["sept.", 9], ["sept", 9], ["oct", 10], ["oct.", 10], ["nov", 11], ["nov.", 11], ["dec", 12], ["déc.", 12], ["déc", 12], ["01", 1], ["02", 2], ["03", 3], ["04", 4], ["05", 5], ["06", 6], ["07", 7], ["08", 8], ["09", 9]]);
    FrenchDateTime.Numbers = new Map([["zero", 0], ["un", 1], ["une", 1], ["a", 1], ["deux", 2], ["trois", 3], ["quatre", 4], ["cinq", 5], ["six", 6], ["sept", 7], ["huit", 8], ["neuf", 9], ["dix", 10], ["onze", 11], ["douze", 12], ["treize", 13], ["quatorze", 14], ["quinze", 15], ["seize", 16], ["dix-sept", 17], ["dix-huit", 18], ["dix-neuf", 19], ["vingt-et-un", 21], ["vingt et un", 21], ["vingt", 20], ["vingt deux", 22], ["vingt-deux", 22], ["vingt trois", 23], ["vingt-trois", 23], ["vingt quatre", 24], ["vingt-quatre", 24], ["vingt cinq", 25], ["vingt-cinq", 25], ["vingt six", 26], ["vingt-six", 26], ["vingt sept", 27], ["vingt-sept", 27], ["vingt huit", 28], ["vingt-huit", 28], ["vingt neuf", 29], ["vingt-neuf", 29], ["trente", 30], ["trente et un", 31], ["trente-et-un", 31], ["trente deux", 32], ["trente-deux", 32], ["trente trois", 33], ["trente-trois", 33], ["trente quatre", 34], ["trente-quatre", 34], ["trente cinq", 35], ["trente-cinq", 35], ["trente six", 36], ["trente-six", 36], ["trente sept", 37], ["trente-sept", 37], ["trente huit", 38], ["trente-huit", 38], ["trente neuf", 39], ["trente-neuf", 39], ["quarante", 40], ["quarante et un", 41], ["quarante-et-un", 41], ["quarante deux", 42], ["quarante-duex", 42], ["quarante trois", 43], ["quarante-trois", 43], ["quarante quatre", 44], ["quarante-quatre", 44], ["quarante cinq", 45], ["quarante-cinq", 45], ["quarante six", 46], ["quarante-six", 46], ["quarante sept", 47], ["quarante-sept", 47], ["quarante huit", 48], ["quarante-huit", 48], ["quarante neuf", 49], ["quarante-neuf", 49], ["cinquante", 50], ["cinquante et un", 51], ["cinquante-et-un", 51], ["cinquante deux", 52], ["cinquante-deux", 52], ["cinquante trois", 53], ["cinquante-trois", 53], ["cinquante quatre", 54], ["cinquante-quatre", 54], ["cinquante cinq", 55], ["cinquante-cinq", 55], ["cinquante six", 56], ["cinquante-six", 56], ["cinquante sept", 57], ["cinquante-sept", 57], ["cinquante huit", 58], ["cinquante-huit", 58], ["cinquante neuf", 59], ["cinquante-neuf", 59], ["soixante", 60], ["soixante et un", 61], ["soixante-et-un", 61], ["soixante deux", 62], ["soixante-deux", 62], ["soixante trois", 63], ["soixante-trois", 63], ["soixante quatre", 64], ["soixante-quatre", 64], ["soixante cinq", 65], ["soixante-cinq", 65], ["soixante six", 66], ["soixante-six", 66], ["soixante sept", 67], ["soixante-sept", 67], ["soixante huit", 68], ["soixante-huit", 68], ["soixante neuf", 69], ["soixante-neuf", 69], ["soixante dix", 70], ["soixante-dix", 70], ["soixante et onze", 71], ["soixante-et-onze", 71], ["soixante douze", 72], ["soixante-douze", 72], ["soixante treize", 73], ["soixante-treize", 73], ["soixante quatorze", 74], ["soixante-quatorze", 74], ["soixante quinze", 75], ["soixante-quinze", 75], ["soixante seize", 76], ["soixante-seize", 76], ["soixante dix sept", 77], ["soixante-dix-sept", 77], ["soixante dix huit", 78], ["soixante-dix-huit", 78], ["soixante dix neuf", 79], ["soixante-dix-neuf", 79], ["quatre vingt", 80], ["quatre-vingt", 80], ["quatre vingt un", 81], ["quatre-vingt-un", 81], ["quatre vingt deux", 82], ["quatre-vingt-duex", 82], ["quatre vingt trois", 83], ["quatre-vingt-trois", 83], ["quatre vingt quatre", 84], ["quatre-vingt-quatre", 84], ["quatre vingt cinq", 85], ["quatre-vingt-cinq", 85], ["quatre vingt six", 86], ["quatre-vingt-six", 86], ["quatre vingt sept", 87], ["quatre-vingt-sept", 87], ["quatre vingt huit", 88], ["quatre-vingt-huit", 88], ["quatre vingt neuf", 89], ["quatre-vingt-neuf", 89], ["quatre vingt dix", 90], ["quatre-vingt-dix", 90], ["quatre vingt onze", 91], ["quatre-vingt-onze", 91], ["quatre vingt douze", 92], ["quatre-vingt-douze", 92], ["quatre vingt treize", 93], ["quatre-vingt-treize", 93], ["quatre vingt quatorze", 94], ["quatre-vingt-quatorze", 94], ["quatre vingt quinze", 95], ["quatre-vingt-quinze", 95], ["quatre vingt seize", 96], ["quatre-vingt-seize", 96], ["quatre vingt dix sept", 97], ["quatre-vingt-dix-sept", 97], ["quatre vingt dix huit", 98], ["quatre-vingt-dix-huit", 98], ["quatre vingt dix neuf", 99], ["quatre-vingt-dix-neuf", 99], ["cent", 100]]);
    FrenchDateTime.DayOfMonth = new Map([["1er", 1], ["2e", 2], ["3e", 3], ["4e", 4], ["5e", 5], ["6e", 6], ["7e", 7], ["8e", 8], ["9e", 9], ["10e", 10], ["11e", 11], ["12e", 12], ["13e", 13], ["14e", 14], ["15e", 15], ["16e", 16], ["17e", 17], ["18e", 18], ["19e", 19], ["20e", 20], ["21e", 21], ["22e", 22], ["23e", 23], ["24e", 24], ["25e", 25], ["26e", 26], ["27e", 27], ["28e", 28], ["29e", 29], ["30e", 30], ["31e", 31]]);
    FrenchDateTime.DoubleNumbers = new Map([["demi", 0.5], ["quart", 0.25]]);
    FrenchDateTime.HolidayNames = new Map([["fathers", ["peres", "pères", "fêtedespères", "fetedesperes"]], ["mothers", ["fêtedesmères", "fetedesmeres"]], ["thanksgiving", ["lactiondegrace", "lactiondegrâce", "jourdethanksgiving", "thanksgiving"]], ["martinlutherking", ["journeemartinlutherking", "martinlutherkingjr"]], ["washingtonsbirthday", ["washingtonsbirthday", "washingtonbirthday"]], ["canberra", ["canberraday"]], ["labour", ["fetedetravail", "travail", "fetedutravail"]], ["columbus", ["columbusday"]], ["memorial", ["jourcommémoratif", "jourcommemoratif"]], ["yuandan", ["yuandan", "nouvelanchinois"]], ["maosbirthday", ["maosbirthday"]], ["teachersday", ["teachersday", "teacherday"]], ["singleday", ["singleday"]], ["allsaintsday", ["allsaintsday"]], ["youthday", ["youthday"]], ["childrenday", ["childrenday", "childday"]], ["femaleday", ["femaleday"]], ["treeplantingday", ["treeplantingday"]], ["arborday", ["arborday"]], ["girlsday", ["girlsday"]], ["whiteloverday", ["whiteloverday"]], ["loverday", ["loverday"]], ["christmas", ["noel", "noël"]], ["xmas", ["xmas"]], ["newyear", ["nouvellesannees", "nouvelan"]], ["newyearday", ["jourdunouvelan"]], ["newyearsday", ["jourdel'an", "jourpremierdelannee", "jourpremierdelannée"]], ["inaugurationday", ["jourd'inaugueration", "inaugueration"]], ["groundhougday", ["marmotte"]], ["valentinesday", ["lasaint-valentin", "lasaintvalentin"]], ["stpatrickday", ["stpatrickday"]], ["aprilfools", ["poissond'avril"]], ["stgeorgeday", ["stgeorgeday"]], ["mayday", ["premier-mai", "ler-mai", "1-mai"]], ["cincodemayoday", ["cincodemayo"]], ["baptisteday", ["bapteme", "baptême"]], ["usindependenceday", ["l'independanceamericaine", "lindépendanceaméricaine"]], ["independenceday", ["l'indépendance", "lindependance"]], ["bastilleday", ["laprisedelabastille", "bastille"]], ["halloweenday", ["halloween"]], ["allhallowday", ["allhallowday"]], ["allsoulsday", ["allsoulsday"]], ["guyfawkesday", ["guyfawkesday"]], ["veteransday", ["veteransday"]], ["christmaseve", ["reveillondenoel", "réveillondenoël", "veilledenoel", "veilledenoël"]], ["newyeareve", ["réveillondenouvelan", "reveillondenouvelan", "lasaint-sylvestre", "lasaintsylvestre"]]]);
    FrenchDateTime.NightRegex = `\\b(minuit|nuit)\\b`;
})(FrenchDateTime = exports.FrenchDateTime || (exports.FrenchDateTime = {}));
//# sourceMappingURL=frenchDateTime.js.map